# vim: ft=bash

# add_to_path function
add_to_path() {
    local x
	[[ $# -ne 1 ]] && return 1
	for x in $1; do
		case ":${PATH}:" in
			*":${x}:"*) ;; # already there
			*) PATH="$x:$PATH";;
		esac
	done
    export PATH
}

# add_to_manpath function
add_to_manpath() {
    local x
	[[ $# -ne 1 ]] && return 1
	for x in $1; do
		case ":${MANPATH}:" in
			*":${x}:"*) ;; # already there
			*) MANPATH="$x:$MANPATH";;
		esac
	done
    export MANPATH
}

# copy terminfo
ssh_copy_terminfo() {
	local EXEC
    EXEC='command ssh'
    [[ $# -eq 0 ]] && { echo "Missing [user@]hostname"; return 1; }
    infocmp $TERM &>/dev/null || { echo "Either infocmp is not installed or missing $TERM terminfo"; return 1; }
    echo "Copying $TERM terminfo to $*"
    infocmp | $EXEC "$*" "tic -"
}

# tests if $1 > $2
_greater_than() {
    [ ${1%.*} -eq ${2%.*} ] && [ ${1#*.} \> ${2#*.} ] || [ ${1%.*} -gt ${2%.*} ]
}

# le pasas una fecha y la muestra en varios husos horarios
udate() {
    local EXE actual fecha MYTZ
    actual="$(date +"%Y-%m-%d %H:%M:%S")"
    echo -n "Fecha a convertir (Default: $actual): "
    read -r fecha
    fecha="${fecha:-$actual}"
    echo -n "TZ: (Default: Europe/Madrid): "
    read -r MYTZ
    MYTZ="${MYTZ:-Europe/Madrid}"
    EXE='command date'
    if command -v gdate >/dev/null 2>&1; then EXE='command gdate'; fi
    {
        export TZ="${MYTZ}"; echo -n "UNIX: "; $EXE +%s --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="${MYTZ}"; echo -n "${TZ}: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
		echo '- - - - - - -'
        export TZ="UTC"; echo -n "${TZ}/GMT: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="Europe/Madrid"; echo -n "$TZ: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="Europe/London"; echo -n "$TZ: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="America/New_York"; echo -n "$TZ: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="America/Los_Angeles"; echo -n "$TZ: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="Asia/Hong_Kong"; echo -n "$TZ: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
        export TZ="Asia/Tokyo"; echo -n "$TZ: "; $EXE --date=@$(export TZ="$MYTZ"; $EXE "+%s" --date="$fecha");
    } | column -t | BAT_STYLE="grid" bat
    unset TZ BAT_STYLE
}

# le pasas timestamp en unix y te lo muestra en varios husos horarios
unixdate() {
    local EXE timestamp MYTZ
    timestamp="${1:-}"
    [[ -z $timestamp ]] && { echo -n "Unix timestamp: "; read -r timestamp; }
    MYTZ="${MYTZ:-Europe/Madrid}"
    EXE='command date'
    if command -v gdate >/dev/null 2>&1; then EXE='command gdate'; fi
    {
        export TZ="UTC"; echo -n "${TZ}/GMT: "; $EXE --date=@$timestamp
        export TZ="Europe/Madrid"; echo -n "$TZ: "; $EXE --date=@$timestamp
    } | column -t | BAT_STYLE="grid" bat
    unset TZ
}

# ls octal permissions
lso() {
    ls -l "$@" | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(" %0o ",k);print}'
}

# generate random password
randompassword() {
    echo "$(date +%s; uname -a; ps -e; uptime) $PPID $? $_ $$ $COLUMNS" | sha256sum | base64 | head -c 18
    echo
}

# pinta conteo de threads
threadscounter() {
    ps -o uid,ppid,command -eT |sort -k3 |uniq -c |sort -n |tail
}

biggest_files() {
    1>&2 echo "Running: 'find . -type f -exec du -ah {} \; | sort -h' ..."
    find . -type f -exec du -ah {} \; | sort -h 2>/dev/null
}
