source ~/.vim/aorith/sensible.vim

if v:progname !~? 'gvim\|vim\|nvim'
  set noloadplugins
endif

if exists('$SUDO_USER')
  set noundofile noswapfile nobackup
  set viminfo=
  if v:version > 800
    set viminfofile=NONE
  endif
  finish
endif

if v:version <= 800 || &compatible
  finish
endif

" {{{ Bootstrap Vim-Plug ------------------------------------------------------
if empty(glob('~/.vim/autoload/plug.vim'))
  silent execute '!curl -fLo ~/.vim/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" }}} -------------------------------------------------------------------------

" {{{ Options before plugins --------------------------------------------------

" POLYGLOT
"let g:polyglot_disabled = ['markdown']

" VIM-MARKDOWN (from polyglot)
let g:vim_markdown_conceal_code_blocks = 0

" PANDOC
let g:pandoc#syntax#conceal#use = 1
let g:pandoc#syntax#conceal#urls = 1
let g:pandoc#syntax#codeblocks#embeds#use = 0
let g:pandoc#syntax#conceal#blacklist = ['atx', 'codeblock_start', 'codeblock_delim']

" ALE
let g:ale_enabled = 1
let g:ale_completion_enabled = 1 " disable for deoplete
let g:ale_completion_autoimport = 1
let g:ale_set_balloons = 1
let g:ale_hover_to_preview = 1
let g:ale_hover_to_floating_preview = 1
let g:ale_exclude_highlights = ['line too long']
let g:ale_lint_on_text_changed = 'normal'
let g:ale_lint_delay = 400
let g:ale_lint_on_save = 1
let g:ale_lint_on_insert_leave = 1
let g:ale_lint_on_enter = 1
let g:ale_echo_msg_format = '[%linter%][%severity%] %s'
let g:ale_list_window_size = 5
let g:ale_open_list = 0
let g:ale_keep_list_window_open = 0

" FZF
let g:fzf_layout = { 'window': { 'width': 0.90, 'height': 0.90 } }
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" SIGNIFY
let g:signify_sign_change = '~'
let g:signify_priority = 9

" MUCOMPLETE
let g:mucomplete#enable_auto_at_startup = 1
let g:mucomplete#completion_delay = 250
let g:mucomplete#reopen_immediately = 0

" }}} -------------------------------------------------------------------------

" {{{ Plugins -----------------------------------------------------------------
call plug#begin('~/.local/share/vim/plugged')

Plug 'sheerun/vim-polyglot'
Plug 'mhinz/vim-signify'
Plug 'tpope/vim-fugitive'
Plug 'dense-analysis/ale'
Plug 'lifepillar/vim-mucomplete'
Plug 'fgsch/vim-varnish'
Plug 'https://gitlab.com/protesilaos/tempus-themes-vim.git'

if empty($SSH_CLIENT)
  "Plug 'vim-pandoc/vim-pandoc-syntax'
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
end

Plug 'romainl/Apprentice'
Plug 'lifepillar/vim-solarized8'
Plug 'lifepillar/vim-gruvbox8'
Plug 'gruvbox-community/gruvbox'
Plug 'arcticicestudio/nord-vim'
Plug 'igemnace/highlight.vim'
Plug 'sonph/onehalf', { 'rtp': 'vim' }
Plug 'dracula/vim', { 'as': 'dracula' }

call plug#end()
" }}} -------------------------------------------------------------------------

" {{{ Options after plugins ---------------------------------------------------
set omnifunc=ale#completion#OmniFunc
" }}} -------------------------------------------------------------------------

" {{{ Sources -----------------------------------------------------------------
source ~/.vim/aorith/basic.vim
source ~/.vim/aorith/mappings.vim
source ~/.vim/aorith/commands.vim
source ~/.vim/aorith/terminal_setup.vim
source ~/.vim/aorith/autocmds.vim
"source ~/.vim/aorith/dynamic_theme.vim
source ~/.vim/aorith/themes/dracula.vim
" }}} -------------------------------------------------------------------------
