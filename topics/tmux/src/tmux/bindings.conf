# vim: ft=tmux

bind 'C-b' send-prefix

bind -N 'Custom: List key bindings' '?' display-popup -w80% -h90% -E "tmux list-keys -N | bat -f -l fstab"

bind -N 'Reload config' 'r' {
    source-file ~/.config/tmux/tmux.conf
    display 'Config reloaded'
}

bind -N 'Kill pane' -n 'M-w' kill-pane

bind -N 'Clear both screen and tmux history buffer' -n 'C-l' {
    send-keys 'C-l'
    run-shell -d 0.1
    if-shell '[[ ! $(tmux display-message -p "#W") =~ vim ]]' clear-history
}

bind -N 'Select a window interactively' 'w' choose-tree -Zw

# Disable mouse scroll on status bar so it does not switch windows
unbind -n 'WheelUpStatus'
unbind -n 'WheelDownStatus'

# New window/session
# removing this binding to avoid having +9 windows in a session
# create new windows with 'M-{1,2,3,4,5,6,7,8,9}'
bind -N 'New window' -n 'M-t' new-window
bind -N 'New session' -n 'M-T' {
    new-session
    run-shell -d 0.1
    command-prompt -I "" "rename-session -- '%%'"
}

# Rename window/session
bind -N 'Rename window' -n 'M-r'  command-prompt -I "#W" "rename-window -- '%%'"
bind -N 'Rename session' -n 'M-R' command-prompt -I "#S" "rename-session -- '%%'"

# Cycle window/session
bind -N 'Cycle windows' -n 'M-n' next-window
bind -N 'Cycle sessions' -n 'M-,' switch-client -p

# Select panes
bind -N 'Select bottom pane' -n 'M-j' select-pane -D
bind -N 'Select top pane'    -n 'M-k' select-pane -U
bind -N 'Select left pane'   -n 'M-h' select-pane -L
bind -N 'Select right pane'  -n 'M-l' select-pane -R

# Move panes
bind -N 'Swap pane left'  -n 'M-H' swap-pane -s '{left-of}'
bind -N 'Swap pane down'  -n 'M-J' swap-pane -s '{down-of}'
bind -N 'Swap pane up'    -n 'M-K' swap-pane -s '{up-of}'
bind -N 'Swap pane right' -n 'M-L' swap-pane -s '{right-of}'

# Resize panes
bind -N 'Resize left'  -n 'M-Left' resize-pane -L 1
bind -N 'Resize down'  -n 'M-Down' resize-pane -D 1
bind -N 'Resize up'    -n 'M-Up' resize-pane -U 1
bind -N 'Resize right' -n 'M-Right' resize-pane -R 1

# Zoom/Unzoom pane
bind -N 'Zoom/Unzoom pane' -n 'M-z' resize-pane -Z

# Split panes
bind -N 'Split horizontally' -n 'M-d' split-window -h -c '#{pane_current_path}'
bind -N 'Split vertically' -n 'M-D' split-window -v -c '#{pane_current_path}'

# Select windows
## Create the window when it does not exist
#bind -N 'Select window 1' -n 'M-1' if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
#bind -N 'Select window 2' -n 'M-2' if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
#bind -N 'Select window 3' -n 'M-3' if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
#bind -N 'Select window 4' -n 'M-4' if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
#bind -N 'Select window 5' -n 'M-5' if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
#bind -N 'Select window 6' -n 'M-6' if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
#bind -N 'Select window 7' -n 'M-7' if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
#bind -N 'Select window 8' -n 'M-8' if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
#bind -N 'Select window 9' -n 'M-9' if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
# ... or select only if it does exists
bind -N 'Select window 1' -n 'M-1' select-window -t :1
bind -N 'Select window 2' -n 'M-2' select-window -t :2
bind -N 'Select window 3' -n 'M-3' select-window -t :3
bind -N 'Select window 4' -n 'M-4' select-window -t :4
bind -N 'Select window 5' -n 'M-5' select-window -t :5
bind -N 'Select window 6' -n 'M-6' select-window -t :6
bind -N 'Select window 7' -n 'M-7' select-window -t :7
bind -N 'Select window 8' -n 'M-8' select-window -t :8
bind -N 'Select window 9' -n 'M-9' select-window -t :9

bind -N 'Select the next window layout (remap to Mod+Shift+Enter)' -n 'M-Enter' next-layout

bind -N 'Toggle pane synchronization' -n 'M-s' {
  set synchronize-panes
  display 'synchronize-panes #{?synchronize-panes,on,off}'
}

# Fix mouse wheel
bind -T root 'WheelUpPane' {
  if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send-keys -M
  } {
    if -F '#{alternate_on}' {
      send-keys -N 3 Up
    } {
      copy-mode -e
    }
  }
}
bind -T root 'WheelDownPane' {
  if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send-keys -M
  } {
    if -F '#{alternate_on}' {
      send-keys -N 3 Down
    } {
      send-keys -M
    }
  }
}


bind -N 'Enter copy mode' -n 'M-g' copy-mode
bind -T copy-mode-vi 'Escape' {
  if -F '#{selection_active}' {
    send-keys -X clear-selection
  } {
    send-keys -X cancel
  }
}
bind -N 'Begin selection' -T copy-mode-vi 'v' send-keys -X begin-selection
bind -N 'Rectangle toggle' -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind -N 'Rectangle toggle' -T copy-mode-vi 'r' send-keys -X rectangle-toggle
bind -N 'Copy and cancel' -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel
bind -N 'Copy and clear' -T copy-mode-vi 'c' send-keys -X copy-pipe
bind -N 'Copy and cancel' -T copy-mode-vi 'Enter' send-keys -X copy-pipe-and-cancel
bind -N 'Cancel copy mode' -T copy-mode-vi 'q' send-keys -X cancel
bind -N 'Cancel copy mode' -T copy-mode-vi 'C-c'  send-keys -X cancel
bind -T copy-mode-vi 'MouseDragEnd1Pane' send-keys -X copy-pipe-no-clear
bind -T copy-mode-vi 'MouseDrag1Pane' {
    select-pane
    send-keys -X begin-selection
}
bind -T copy-mode-vi 'WheelUpPane' {
    select-pane
    send-keys -X -N 3 scroll-up
}
bind -T copy-mode-vi 'WheelDownPane' {
    select-pane
    send-keys -X -N 3 scroll-down
}

# Double Click (disabled because it copies the neo-tree file when using the mouse)
# bind -n 'DoubleClick1Pane' {
#     select-pane
#     copy-mode -M
#     send-keys -X select-word
#     run-shell -d 0.1 # visual feedback
#     send-keys -X copy-pipe-and-cancel
# }
bind -T copy-mode-vi 'DoubleClick1Pane' {
    select-pane
    send-keys -X select-word
    run-shell -d 0.1
    send-keys -X copy-pipe-and-cancel
}

# Triple Click
bind -n 'TripleClick1Pane' {
    select-pane
    copy-mode -M
    send-keys -X select-line
    run-shell -d 0.1
    send-keys -X copy-pipe-and-cancel
}
bind -T copy-mode-vi 'TripleClick1Pane' {
    select-pane
    send-keys -X select-line
    run-shell -d 0.1
    send-keys -X copy-pipe-and-cancel
}

# Clear selection on mouse click
bind -N 'Clear selection on mouse clic' -T copy-mode-vi 'MouseDown1Pane' {
    select-pane
    send-keys -X clear-selection
}

bind-key -N 'Search prompt' 'p' {
    copy-mode
    #send-keys -X search-backward ^((ssh@)?[?\[a-z0-9\]+@\[0-9A-Za-z\]+-?([0-9A-Za-z]+)?|.*\u276F)
    #send-keys -X search-backward ^([0-9][0-9][0-9].*\ \\$\ )
    send-keys -X search-backward "❯ .+"
}

bind -N 'Search buffer in fzf' -n 'M-F' {
    capture-pane -b fzf01 -S -
    new-window -n 'FZF-SEARCH' -a "tmux show-buffer -b fzf01 | fzf | $CLIPBOARD_COPY"
}

bind -N 'Toggle output of current pane to file' 'O' {
    pipe-pane -o "cat >> ~/tmux.w#I.p#P.#{session_activity}.log"
    display "Toggled logging to ~/tmux.w#I.p#P.#{session_activity}.log"
}

bind -N 'Save full buffer to file' 'o' {
    capture-pane -S -
    save-buffer "~/tmux.w#I.p#P.#{session_activity}.log"
    display "Buffer saved to ~/tmux.w#I.p#P.#{session_activity}.log"
    delete-buffer
}

bind -N 'Open buffer in vim' -n 'M-e' {
    capture-pane -b vim01 -S -
    #new-window -n 'BUFFER-IN-VIM' -a "tmux show-buffer -b vim01 | ~/.config/tmux/bin/pipe-as-file-open.py vim -u ~/.vim/min-vimrc"
    new-window -n 'BUFFER-IN-VIM' -a "tmux show-buffer -b vim01 | ~/.config/tmux/bin/pipe-as-file-open.py nvim"
}

bind -N 'Search' -n 'M-f' {
    copy-mode
    send-keys '?'
}

bind -N 'TCDN Server/IP for' -n 'M-i' {
    run -b "~/.config/tmux/bin/tmux_server_for"
}

bind -N 'Switch theme' 't' display-popup -w80% -h90% -E "bash -lic '$HOME/.config/alacritty/bin/switch-theme.sh'"
