# vim: ft=tmux

unbind-key C-b
set-option -g prefix Home
bind Home send-prefix

bind -N 'Custom: List key bindings' '?' display-popup -w80% -h90% -KE -R "tmux list-keys -N | bat -f -l fstab"

bind -N 'Reload config' 'C-r' {
    source-file ~/.config/tmux/tmux.conf
    display 'Config reloaded'
}

bind -N 'Kill pane' 'w' kill-pane

bind -N 'Clear both screen and tmux history buffer' -n 'C-l' {
    send-keys 'C-l'
    run 'sleep 0.1'
    clear-history
}

bind -N 'Select a window interactively' 'W' choose-tree -Zw

# Disable mouse scroll on status bar so it does not switch windows
unbind -n 'WheelUpStatus'
unbind -n 'WheelDownStatus'

# New window/session
bind -N 'New window' 't' new-window
bind -N 'New session' 'T' new-session

# Rename window/session
bind -N 'Rename window' 'r'  command-prompt -I "#W" "rename-window -- '%%'"
bind -N 'Rename session' 'R' command-prompt -I "#S" "rename-session -- '%%'"

# Cycle window/session
bind -N 'Cycle windows' 'n' next-window
bind -N 'Cycle sessions' ',' switch-client -p

# Select panes
bind -N 'Select bottom pane' -r 'j' select-pane -D
bind -N 'Select top pane' -r    'k' select-pane -U
bind -N 'Select left pane' -r   'h' select-pane -L
bind -N 'Select right pane' -r  'l' select-pane -R

# Move panes
bind -N 'Swap pane left  (remap Mod+Shift+h)' -r 'H' swap-pane -s '{left-of}'
bind -N 'Swap pane down  (remap Mod+Shift+j)' -r 'J' swap-pane -s '{down-of}'
bind -N 'Swap pane up    (remap Mod+Shift+k)' -r 'K' swap-pane -s '{up-of}'
bind -N 'Swap pane right (remap Mod+Shift+l)' -r 'L' swap-pane -s '{right-of}'

# Resize panes
bind -N 'Resize left'  -n 'M-Left' resize-pane -L 1
bind -N 'Resize down'  -n 'M-Down' resize-pane -D 1
bind -N 'Resize up'    -n 'M-Up' resize-pane -U 1
bind -N 'Resize right' -n 'M-Right' resize-pane -R 1

# Zoom/Unzoom pane
bind -N 'Zoom/Unzoom pane' 'z' resize-pane -Z

# Split panes
bind -N 'Split horizontally' 'd' split-window -h -c '#{pane_current_path}'
bind -N 'Split vertically' 'D' split-window -v -c '#{pane_current_path}'

# Select windows
bind -N 'Select window 1' '1' select-window -t 1
bind -N 'Select window 2' '2' select-window -t 2
bind -N 'Select window 3' '3' select-window -t 3
bind -N 'Select window 4' '4' select-window -t 4
bind -N 'Select window 5' '5' select-window -t 5
bind -N 'Select window 6' '6' select-window -t 6
bind -N 'Select window 7' '7' select-window -t 7
bind -N 'Select window 8' '8' select-window -t 8
bind -N 'Select window 9' '9' select-window -t 9

bind -N 'Select the next window layout (remap to Mod+Shift+Enter)' 'Enter' next-layout

bind -N 'Toggle pane synchronization' 's' {
  set synchronize-panes
  display 'synchronize-panes #{?synchronize-panes,on,off}'
}

# Fix mouse wheel
bind -T root 'WheelUpPane' {
  if -Ft= "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send -Mt=
  } {
    if -Ft= '#{alternate_on}' {
      send -t= -N 3 Up
    } {
      copy-mode -et=
    }
  }
}
bind -T root 'WheelDownPane' {
  if -Ft= "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send -Mt=
  } {
    if -Ft= '#{alternate_on}' {
      send -t= -N 3 Down
    } {
      send -Mt=
    }
  }
}

# Double and Triple click
bind -T root 'DoubleClick1Pane' {
  select-pane -t=
  if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send -M
  } {
    copy-mode -H; send -X select-word; run -d0.3; send -X copy-pipe-and-cancel
  }
}
bind -T root 'TripleClick1Pane' {
  select-pane -t=
  if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send -M
  } {
    copy-mode -H; send -X select-line; run -d0.3; send -X copy-pipe-and-cancel
  }
}

# Clear the current selection or exit copy mode if none is active.
bind -T copy-mode 'Escape' {
  if -F '#{selection_active}' {
    send -X clear-selection
  } {
    send -X cancel
  }
}

bind -N 'Enter copy mode' 'g' copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi 'r' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel
bind -T copy-mode-vi 'Enter' send -X copy-pipe-and-cancel
bind -T copy-mode-vi 'q' send -X cancel
bind -T copy-mode-vi 'C-c'  send -X cancel
bind -T copy-mode-vi 'MouseDragEnd1Pane' send -X copy-pipe-no-clear
bind -T copy-mode-vi 'MouseDrag1Pane'    select-pane \; send -X begin-selection
bind -T copy-mode-vi 'WheelUpPane'       select-pane \; send -X -N 3 scroll-up
bind -T copy-mode-vi 'WheelDownPane'     select-pane \; send -X -N 3 scroll-down
bind -T copy-mode-vi 'DoubleClick1Pane' {
    select-pane
    send -X select-word
    run-shell -d 0.1
    send -X copy-pipe-no-clear
}
bind -T copy-mode-vi 'TripleClick1Pane' {
    select-pane
    send -X select-line
    run-shell -d 0.1
    send -X copy-pipe-no-clear
}

# Clear selection on mouse click
bind -N 'Clear selection on mouse clic' -T copy-mode-vi 'MouseDown1Pane' {
    select-pane
    send-keys -X clear-selection
}

bind-key -N 'Search prompt' -n 'M-F1' {
    copy-mode
    send-keys -X start-of-line
    send-keys -X search-backward ^(ssh@)?[?\[a-z0-9\]+@\[0-9A-Za-z\]+-?([0-9A-Za-z]+)?
}

bind -N 'Toggle output of current pane to file' 'O' {
    pipe-pane -o "cat >> ~/tmux.w#I.p#P.#{session_activity}.log"
    display "Toggled logging to ~/tmux.w#I.p#P.#{session_activity}.log"
}

bind -N 'Save full buffer to file' 'o' {
    capture-pane -S -
    save-buffer "~/tmux.w#I.p#P.#{session_activity}.log"
    display "Buffer saved to ~/tmux.w#I.p#P.#{session_activity}.log"
    delete-buffer
}

bind -N 'Filter log and send to lnav' 'P' {
    capture-pane -b lnav01 -S -
    split-window -h "tmux show-buffer -b lnav01 | sed '/^\s*$/d' | grep '[0-9]*:[0-9]*:[0-9]*' | lnav"
}

bind -N 'Open buffer in vim' 'V' {
    capture-pane -b vim01 -S -
    new-window -n 'BUFFER-IN-VIM' -a "tmux show-buffer -b vim01 | pipe-as-file-open.py vim -u ~/.vim/min-vimrc"
}

bind -N 'Open buffer in sublime' 'S' {
    capture-pane -b sublime01 -S -
    run -b "tmux show-buffer -b sublime01 | pipe-as-file-open.py '$SUBL_CMD' -w"
}

bind -N 'Search' 'f' {
    copy-mode
    send-keys '?'
}
